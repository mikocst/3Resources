---
---

<div id="three-container"></div>

<style>
  #three-container {
    width: 100dvw;
    height: 100dvh; /* Full viewport height */
    display: block;
    position:absolute;
    z-index: -1;
  }
</style>

<script>
  import * as THREE from "three";
  import vertexShader from "../shaders/vertex.glsl";
  import fragmentShader from "../shaders/fragment.glsl";

  document.addEventListener('DOMContentLoaded', () => {
    const container = document.getElementById('three-container');
    
    // Set up the scene, camera, and renderer
    const scene = new THREE.Scene();
    const camera = new THREE.PerspectiveCamera(75, container.clientWidth / container.clientHeight, 0.1, 1000);
    const renderer = new THREE.WebGLRenderer({
        alpha: true
    });
    renderer.setSize(container.clientWidth, container.clientHeight);
    container.appendChild(renderer.domElement);

    // Geometry
    const geometry = new THREE.SphereGeometry();
    const material = new THREE.ShaderMaterial({
      vertexShader,
      fragmentShader,
      uniforms: {
        uTime: {value: 0.1},
      }
    });
    const cube = new THREE.Mesh(geometry, material);
    scene.add(cube);

    // Position the camera
    camera.position.x = -2;
    camera.position.y = -1;
    camera.position.z = 4;

    // Animation loop
    const animate = function () {
      requestAnimationFrame(animate);

      cube.rotation.x += 0.005;

      renderer.render(scene, camera);
    };

    animate();

    // Handle window resize
    window.addEventListener('resize', () => {
      camera.aspect = container.clientWidth / container.clientHeight;
      camera.updateProjectionMatrix();
      renderer.setSize(container.clientWidth, container.clientHeight);
    });
  });
</script>